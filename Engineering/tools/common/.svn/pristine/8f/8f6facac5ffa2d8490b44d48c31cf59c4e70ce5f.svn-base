##
## Copyright (C) 2016, 1st Playable Productions, LLC. All rights reserved.
##
## UNPUBLISHED -- Rights reserved under the copyright laws of the United
## States. Use of a copyright notice is precautionary only and does not
## imply publication or disclosure.
##
## THIS DOCUMENTATION CONTAINS CONFIDENTIAL AND PROPRIETARY INFORMATION
## OF 1ST PLAYABLE PRODUCTIONS, LLC. ANY DUPLICATION, MODIFICATION,
## DISTRIBUTION, OR DISCLOSURE IS STRICTLY PROHIBITED WITHOUT THE PRIOR
## EXPRESS WRITTEN PERMISSION OF 1ST PLAYABLE PRODUCTIONS, LLC.
###########################################################################

import os
import logging
import sys

def writeVFXManifest( manifestDest, vfxSrcDir ):
    manifest = VFXManifestWriter( manifestDest, vfxSrcDir )
    manifest.writeStart()

    #TODO: will we ever need more than 1 sheet for VFX?
    manifest.writeSpritesheet( "2d/default_VFX", "VFX" )  

    vfxFilesNames = []
       
    for root, _, files in os.walk( vfxSrcDir ):
        for filename in files:
            name, ext = os.path.splitext( filename )
            if ext.lower() == ".json":
                filepath = os.path.join( root, filename )
                vfxFilesNames.append(filepath)
                logging.debug("found " + filepath)
                
    for key in sorted(vfxFilesNames):
        libName = os.path.split( key )[ 1 ]
        libName = os.path.splitext( libName )[ 0 ]

        manifest.writeJsonFile( libName )

    manifest.writeEnd()

class VFXManifestWriter(object):
    def __init__( self, manifestDest, vfxSrcDir ):
        self.manifest = open( os.path.abspath( manifestDest ), 'w' )
        self.vfxSrcDir = vfxSrcDir
        
        
    def writeStart( self ):
        self.manifest.write( "package assets;\n" )
        self.manifest.write( "import assets.JsonAssets;\n" )
        self.manifest.write( "import com.firstplayable.hxlib.loader.ResMan;\n" )

        self.manifest.write( "\n//WARNING! THIS CLASS IS AUTO-GENERATED BY TOOLS. YOUR CHANGES WILL BE OVERWRITTEN." )
        self.manifest.write( "\nclass VFXManifest\n{\n" )
        self.manifest.write( "\tpublic static function init():Void\n" )
        self.manifest.write( "\t{\n" )


    def writeJsonFile( self, libName ):
        filepath = self.vfxSrcDir + "\\" + libName
        filepath = filepath.replace( "\\", "/" )
        filepath = filepath.replace( "./2d/", "" )

        logging.debug( "    writing entry for vfx file: " + libName  )

        line = "\t\t"
        line += "ResMan.instance.addRes( \"VFX\", { src : \""
        line += filepath + ".json"
        line += "\", content : JsonAssets._"
        line += filepath.replace( "/", "_" )
        line += " } );\n"

        self.manifest.write( line )


    def writeSpritesheet( self, spritesheet, libName ):
        sheetPath = spritesheet.replace( "..\\assets\\", "" ) # TODO: no hard-coding "assets"...
        sheetPath = sheetPath.replace( "\\", "/" )
        logging.debug( "        writing entry for sheet: " + sheetPath  )

        # sheet png
        line = "\t\t"
        line += "ResMan.instance.addRes( \""
        line += libName
        line += "\", { src : \""
        line += sheetPath + ".png\""
        line += " } );\n"

        # sheet json
        line += "\t\t"
        line += "ResMan.instance.addRes( \""
        line += libName
        line += "\", { src : \""
        line += sheetPath + ".json"
        line += "\", content : JsonAssets."
        line += "_" + sheetPath.replace( "/", "_" )
        line += " } );\n\n"

        self.manifest.write( line )


    def writeEnd( self ):
        self.manifest.write( "\n\t}\n" )
        self.manifest.write( "}" )
        self.manifest.close()

