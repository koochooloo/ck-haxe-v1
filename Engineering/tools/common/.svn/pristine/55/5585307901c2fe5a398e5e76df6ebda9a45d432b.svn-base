##
## Copyright (C) 2015, 1st Playable Productions, LLC. All rights reserved.
##
## UNPUBLISHED -- Rights reserved under the copyright laws of the United
## States. Use of a copyright notice is precautionary only and does not
## imply publication or disclosure.
##
## THIS DOCUMENTATION CONTAINS CONFIDENTIAL AND PROPRIETARY INFORMATION
## OF 1ST PLAYABLE PRODUCTIONS, LLC. ANY DUPLICATION, MODIFICATION,
## DISTRIBUTION, OR DISCLOSURE IS STRICTLY PROHIBITED WITHOUT THE PRIOR
## EXPRESS WRITTEN PERMISSION OF 1ST PLAYABLE PRODUCTIONS, LLC.
###########################################################################
import os

class CsvToHaxe( object ):
	def __init__( self ):
		self.outputFile = open( "../../../src/assets/CsvAssets.hx", 'w' )
	
	def findFiles( self ):
		self.outputFile.write( "package assets;\n" )
		self.outputFile.write( "\n//WARNING! THIS CLASS IS AUTO-GENERATED BY TOOLS. YOUR CHANGES WILL BE OVERWRITTEN." )
		self.outputFile.write( "\nclass CsvAssets\n{" )
		
		sourceDirectory = "../../../assets/data/"
		
		#Walk through the source directory
		for root, dirs, files in os.walk( sourceDirectory ):
				dirs.sort(); # traverse subdirs in sorted order
				for curFile in sorted(files):
					name, ext = os.path.splitext( curFile )
					
					#Check if it is an audio file
					if ext.lower() == ".csv":
						self.writeHaxe( root + '/' + name )
		
		self.outputFile.write( '\n}' )
		self.outputFile.close()
		
	def writeHaxe( self, file ):
		url = file + ".csv"
		file = file.replace( '../../../assets', '' )
		#print( "writing " + file + "..." )
		varname = file.replace( '/', '_' )
		varname = varname.replace( '-', '' )
		self.outputFile.write( "\n\tpublic static var " + varname + ":String =\n" )
		inFile = open( url, 'r' )
		output = ""
		
		for line in inFile:
			line = line.replace( '"', '\\\"' )
			output += '\t\t+"\\n' + line.strip() + '"\n'
		
		output = output.replace( '+"\\n', '"', 1 )
		
		self.outputFile.write( output )
		self.outputFile.write( '\t;' )
		inFile.close()

reader = CsvToHaxe()
reader.findFiles()
